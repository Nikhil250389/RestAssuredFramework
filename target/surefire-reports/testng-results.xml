<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="13" total="22" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Regression Suite" duration-ms="59137" started-at="2021-12-28T05:47:53Z" finished-at="2021-12-28T05:48:52Z">
    <groups>
      <group name="regression">
        <method signature="BorrowerUser.createBorrowerUser()[pri:1, instance:APITestcases.BorrowerUser@4afcd809]" name="createBorrowerUser" class="APITestcases.BorrowerUser"/>
        <method signature="BorrowerUser.checkExistingBorrowerUser()[pri:3, instance:APITestcases.BorrowerUser@4afcd809]" name="checkExistingBorrowerUser" class="APITestcases.BorrowerUser"/>
        <method signature="BorrowerUser.createBorrowerWithDuplicateValues()[pri:2, instance:APITestcases.BorrowerUser@4afcd809]" name="createBorrowerWithDuplicateValues" class="APITestcases.BorrowerUser"/>
        <method signature="BorrowerUser.updatedBorrowerUser()[pri:4, instance:APITestcases.BorrowerUser@4afcd809]" name="updatedBorrowerUser" class="APITestcases.BorrowerUser"/>
        <method signature="BindingAndRebinding.bindingUserWithInValidPartner()[pri:3, instance:APITestcases.BindingAndRebinding@dd05255]" name="bindingUserWithInValidPartner" class="APITestcases.BindingAndRebinding"/>
        <method signature="BindingAndRebinding.bindingUserWithValidPartner()[pri:2, instance:APITestcases.BindingAndRebinding@dd05255]" name="bindingUserWithValidPartner" class="APITestcases.BindingAndRebinding"/>
        <method signature="BindingAndRebinding.createBorrowerUser()[pri:1, instance:APITestcases.BindingAndRebinding@dd05255]" name="createBorrowerUser" class="APITestcases.BindingAndRebinding"/>
        <method signature="BindingAndRebinding.rebundingWithSameUser()[pri:4, instance:APITestcases.BindingAndRebinding@dd05255]" name="rebundingWithSameUser" class="APITestcases.BindingAndRebinding"/>
        <method signature="LoanDisburesment.loanDirsbumentPositive()[pri:5, instance:APITestcases.LoanDisburesment@77c2494c]" name="loanDirsbumentPositive" class="APITestcases.LoanDisburesment"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="BorrowerUser.createBorrowerUser()[pri:1, instance:APITestcases.BorrowerUser@4afcd809]" name="createBorrowerUser" class="APITestcases.BorrowerUser"/>
        <method signature="BorrowerUser.checkExistingBorrowerUser()[pri:3, instance:APITestcases.BorrowerUser@4afcd809]" name="checkExistingBorrowerUser" class="APITestcases.BorrowerUser"/>
        <method signature="BorrowerUser.createBorrowerWithDuplicateValues()[pri:2, instance:APITestcases.BorrowerUser@4afcd809]" name="createBorrowerWithDuplicateValues" class="APITestcases.BorrowerUser"/>
        <method signature="BorrowerUser.updatedBorrowerUser()[pri:4, instance:APITestcases.BorrowerUser@4afcd809]" name="updatedBorrowerUser" class="APITestcases.BorrowerUser"/>
        <method signature="BindingAndRebinding.bindingUserWithInValidPartner()[pri:3, instance:APITestcases.BindingAndRebinding@dd05255]" name="bindingUserWithInValidPartner" class="APITestcases.BindingAndRebinding"/>
        <method signature="BindingAndRebinding.bindingUserWithValidPartner()[pri:2, instance:APITestcases.BindingAndRebinding@dd05255]" name="bindingUserWithValidPartner" class="APITestcases.BindingAndRebinding"/>
        <method signature="BindingAndRebinding.createBorrowerUser()[pri:1, instance:APITestcases.BindingAndRebinding@dd05255]" name="createBorrowerUser" class="APITestcases.BindingAndRebinding"/>
        <method signature="BindingAndRebinding.rebundingWithSameUser()[pri:4, instance:APITestcases.BindingAndRebinding@dd05255]" name="rebundingWithSameUser" class="APITestcases.BindingAndRebinding"/>
        <method signature="LoanDisburesment.loanDirsbumentPositive()[pri:5, instance:APITestcases.LoanDisburesment@77c2494c]" name="loanDirsbumentPositive" class="APITestcases.LoanDisburesment"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Verify the Borrower User functionality testcase" duration-ms="29409" started-at="2021-12-28T05:47:53Z" finished-at="2021-12-28T05:48:22Z">
      <class name="APITestcases.BorrowerUser">
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BorrowerUser@4afcd809]" name="userLogin" is-config="true" duration-ms="6539" started-at="2021-12-28T05:47:53Z" finished-at="2021-12-28T05:48:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="createBorrowerUser()[pri:1, instance:APITestcases.BorrowerUser@4afcd809]" name="createBorrowerUser" duration-ms="4831" started-at="2021-12-28T05:48:00Z" finished-at="2021-12-28T05:48:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBorrowerUser -->
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BorrowerUser@4afcd809]" name="userLogin" is-config="true" duration-ms="3245" started-at="2021-12-28T05:48:04Z" finished-at="2021-12-28T05:48:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="createBorrowerWithDuplicateValues()[pri:2, instance:APITestcases.BorrowerUser@4afcd809]" name="createBorrowerWithDuplicateValues" duration-ms="881" started-at="2021-12-28T05:48:08Z" depends-on-methods="APITestcases.BorrowerUser.createBorrowerUser" finished-at="2021-12-28T05:48:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBorrowerWithDuplicateValues -->
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BorrowerUser@4afcd809]" name="userLogin" is-config="true" duration-ms="4047" started-at="2021-12-28T05:48:09Z" finished-at="2021-12-28T05:48:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="checkExistingBorrowerUser()[pri:3, instance:APITestcases.BorrowerUser@4afcd809]" name="checkExistingBorrowerUser" duration-ms="860" started-at="2021-12-28T05:48:13Z" depends-on-methods="APITestcases.BorrowerUser.createBorrowerUser" finished-at="2021-12-28T05:48:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExistingBorrowerUser -->
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BorrowerUser@4afcd809]" name="userLogin" is-config="true" duration-ms="3244" started-at="2021-12-28T05:48:13Z" finished-at="2021-12-28T05:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="updatedBorrowerUser()[pri:4, instance:APITestcases.BorrowerUser@4afcd809]" name="updatedBorrowerUser" duration-ms="719" started-at="2021-12-28T05:48:17Z" depends-on-methods="APITestcases.BorrowerUser.createBorrowerUser" finished-at="2021-12-28T05:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatedBorrowerUser -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:APITestcases.BorrowerUser@4afcd809]" name="cleanUp" is-config="true" duration-ms="4995" started-at="2021-12-28T05:48:17Z" finished-at="2021-12-28T05:48:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- APITestcases.BorrowerUser -->
    </test> <!-- Verify the Borrower User functionality testcase -->
    <test name="Verify the Binding and Rebinding functionality testcases" duration-ms="20235" started-at="2021-12-28T05:48:23Z" finished-at="2021-12-28T05:48:43Z">
      <class name="APITestcases.BindingAndRebinding">
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BindingAndRebinding@dd05255]" name="userLogin" is-config="true" duration-ms="3231" started-at="2021-12-28T05:48:23Z" finished-at="2021-12-28T05:48:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="createBorrowerUser()[pri:1, instance:APITestcases.BindingAndRebinding@dd05255]" name="createBorrowerUser" duration-ms="1059" started-at="2021-12-28T05:48:26Z" finished-at="2021-12-28T05:48:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBorrowerUser -->
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BindingAndRebinding@dd05255]" name="userLogin" is-config="true" duration-ms="1086" started-at="2021-12-28T05:48:27Z" finished-at="2021-12-28T05:48:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="bindingUserWithValidPartner()[pri:2, instance:APITestcases.BindingAndRebinding@dd05255]" name="bindingUserWithValidPartner" duration-ms="588" started-at="2021-12-28T05:48:28Z" finished-at="2021-12-28T05:48:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindingUserWithValidPartner -->
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BindingAndRebinding@dd05255]" name="userLogin" is-config="true" duration-ms="1567" started-at="2021-12-28T05:48:29Z" finished-at="2021-12-28T05:48:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="bindingUserWithInValidPartner()[pri:3, instance:APITestcases.BindingAndRebinding@dd05255]" name="bindingUserWithInValidPartner" duration-ms="595" started-at="2021-12-28T05:48:30Z" finished-at="2021-12-28T05:48:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bindingUserWithInValidPartner -->
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.BindingAndRebinding@dd05255]" name="userLogin" is-config="true" duration-ms="1112" started-at="2021-12-28T05:48:31Z" finished-at="2021-12-28T05:48:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="rebundingWithSameUser()[pri:4, instance:APITestcases.BindingAndRebinding@dd05255]" name="rebundingWithSameUser" duration-ms="628" started-at="2021-12-28T05:48:32Z" finished-at="2021-12-28T05:48:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rebundingWithSameUser -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:APITestcases.BindingAndRebinding@dd05255]" name="cleanUp" is-config="true" duration-ms="10365" started-at="2021-12-28T05:48:33Z" finished-at="2021-12-28T05:48:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- APITestcases.BindingAndRebinding -->
    </test> <!-- Verify the Binding and Rebinding functionality testcases -->
    <test name="Verify the Credit Limit functionality testcases" duration-ms="0" started-at="2021-12-28T05:48:43Z" finished-at="2021-12-28T05:48:43Z">
    </test> <!-- Verify the Credit Limit functionality testcases -->
    <test name="Verify by update Credit Limit functionality testcases" duration-ms="0" started-at="2021-12-28T05:48:43Z" finished-at="2021-12-28T05:48:43Z">
    </test> <!-- Verify by update Credit Limit functionality testcases -->
    <test name="Verify by perfome loan disbursment functionality testcases" duration-ms="8936" started-at="2021-12-28T05:48:43Z" finished-at="2021-12-28T05:48:52Z">
      <class name="APITestcases.LoanDisburesment">
        <test-method status="PASS" signature="userLogin()[pri:0, instance:APITestcases.LoanDisburesment@77c2494c]" name="userLogin" is-config="true" duration-ms="1144" started-at="2021-12-28T05:48:43Z" finished-at="2021-12-28T05:48:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="FAIL" signature="loanDirsbumentPositive()[pri:5, instance:APITestcases.LoanDisburesment@77c2494c]" name="loanDirsbumentPositive" duration-ms="662" started-at="2021-12-28T05:48:44Z" finished-at="2021-12-28T05:48:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [0000] but found [6001],
expected [Disbursement is success] but found [Binding ID does not exists],
expected [true] but found [false],
expected [TrxIdPuAqaMsZ] but found [null],
expected [ACTIVE] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [0000] but found [6001],
expected [Disbursement is success] but found [Binding ID does not exists],
expected [true] but found [false],
expected [TrxIdPuAqaMsZ] but found [null],
expected [ACTIVE] but found [null]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at APITestcases.LoanDisburesment.loanDirsbumentPositive(LoanDisburesment.java:228)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanDirsbumentPositive -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:APITestcases.LoanDisburesment@77c2494c]" name="cleanUp" is-config="true" duration-ms="7122" started-at="2021-12-28T05:48:45Z" finished-at="2021-12-28T05:48:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- APITestcases.LoanDisburesment -->
    </test> <!-- Verify by perfome loan disbursment functionality testcases -->
  </suite> <!-- Regression Suite -->
</testng-results>
